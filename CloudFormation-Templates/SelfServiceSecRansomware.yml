AWSTemplateFormatVersion: 2010-09-09
Description: Cloudformation templates to create ransomware checks in the account. https://github.com/awslabs/aws-security-assessment-solution/
Parameters:
  InstanceRoleARN:
    Type: String
  SelfServiceSecS3Bucket:
    Type: String
  TemplatesS3Bucket:
    Type: String
Conditions:
  CreateGovCloudResources: !Equals [ !Ref "AWS::Partition", aws ]
# Currently two features are not supported in GovCloud so we omit these two checks below with this partition check.

Resources:
  # rSSMRansomwareScanner:
  #   Type: "AWS::SSM::Document"
  #   Properties:
  #     Name: "RansomwareEC2Scanner"
  #     Content:
  #         schemaVersion: '2.2'
  #         description: AmazonLinux Ransomware Check
  #         parameters: {}
  #         mainSteps:
  #         - action: aws:runShellScript
  #           name: configureServer
  #           inputs:
  #             runCommand:
  #             - cd /
  #             - find . -type f | perl -ne 'print $1 if m/\.([^.\/]+)$/' | sort -u > /tmp/ext-list
  #             - wget -O /tmp/badlist.txt https://raw.githubusercontent.com/awslabs/aws-security-assessment-solution/CloudFormation-Templates/modules/RansomwareDetection/badfile.txt
  #             - echo "Investigate the following extensions found:"
  #             - grep -Fx -f /tmp/ext-list /tmp/badlist.txt
  #             - rm -f /tmp/ext-list /tmp/badlist.txt
  #             - echo "Completed scan"
  #         outputs:
  #           - configureServer.Output
  #     DocumentType: "Command"

  # rLambdaCheckFor2k8:
  #   Type: "AWS::Lambda::Function"
  #   Properties:
  #     Code:
  #       S3Bucket: !Ref TemplatesS3Bucket
  #       S3Key: "modules/RansomwareDetection/check_for_outdated_os.py.zip"
  #     FunctionName: "LambdaCheckFor2k8"
  #     Handler: "lambda_function.lambda_handler"
  #     MemorySize: 128
  #     Role: !Ref InstanceRoleARN
  #     Runtime: "python3.8"
  #     Timeout: 90
  #     DeadLetterConfig: !Ref "AWS::NoValue"
  #     TracingConfig:
  #       Mode: "PassThrough"
  #     Environment:
  #       Variables:
  #         reportbucket: !Ref SelfServiceSecS3Bucket
  #
  # xLambdaCheckFor2k8:
  #   Type: AWS::CloudFormation::CustomResource
  #   Properties:
  #     ServiceToken: !GetAtt rLambdaCheckFor2k8.Arn

  rLambdaCheckForBackups:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref TemplatesS3Bucket
        S3Key: "modules/RansomwareDetection/check_backup.py.zip"
      FunctionName: "LambdaCheckForBackups"
      Handler: "lambda_function.lambda_handler"
      MemorySize: 128
      Role: !Ref InstanceRoleARN
      Runtime: "python3.8"
      Timeout: 90
      DeadLetterConfig: !Ref "AWS::NoValue"
      TracingConfig:
        Mode: "PassThrough"
      Environment:
        Variables:
          reportbucket: !Ref SelfServiceSecS3Bucket

  xLambdaCheckForBackups:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt rLambdaCheckForBackups.Arn

  rLambdaCheckForGuardDuty:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref TemplatesS3Bucket
        S3Key: "modules/RansomwareDetection/check_guardduty.py.zip"
      FunctionName: "LambdaCheckForGuardDuty"
      Handler: "lambda_function.lambda_handler"
      MemorySize: 128
      Role: !Ref InstanceRoleARN
      Runtime: "python3.8"
      Timeout: 90
      DeadLetterConfig: !Ref "AWS::NoValue"
      TracingConfig:
        Mode: "PassThrough"
      Environment:
        Variables:
          reportbucket: !Ref SelfServiceSecS3Bucket

  xLambdaCheckForGuardDuty:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt rLambdaCheckForGuardDuty.Arn

  rLambdaCheckForEBSSnapshot:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref TemplatesS3Bucket
        S3Key: "modules/RansomwareDetection/check_ebs_snapshots.py.zip"
      FunctionName: "LambdaCheckForEBSSnapShots"
      Handler: "lambda_function.lambda_handler"
      MemorySize: 128
      Role: !Ref InstanceRoleARN
      Runtime: "python3.8"
      Timeout: 90
      DeadLetterConfig: !Ref "AWS::NoValue"
      TracingConfig:
        Mode: "PassThrough"
      Environment:
        Variables:
          reportbucket: !Ref SelfServiceSecS3Bucket

  xLambdaCheckForEBSSnapshot:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt rLambdaCheckForEBSSnapshot.Arn

  rLambdaCheckForS3StaleAccess:
    Type: "AWS::Lambda::Function"
    Condition: CreateGovCloudResources
    Properties:
      Code:
        S3Bucket: !Ref TemplatesS3Bucket
        S3Key: "modules/RansomwareDetection/check_s3_stale_access.py.zip"
      FunctionName: "LambdaCheckForS3StaleAccess"
      Handler: "lambda_function.lambda_handler"
      MemorySize: 128
      Role: !Ref InstanceRoleARN
      Runtime: "python3.8"
      Timeout: 180
      DeadLetterConfig: !Ref "AWS::NoValue"
      TracingConfig:
        Mode: "PassThrough"
      Environment:
        Variables:
          reportbucket: !Ref SelfServiceSecS3Bucket

  xLambdaCheckForS3StaleAccess:
    Type: AWS::CloudFormation::CustomResource
    Condition: CreateGovCloudResources
    Properties:
      ServiceToken: !GetAtt rLambdaCheckForS3StaleAccess.Arn

  rLambdaCheckForSSMUse:
    Type: "AWS::Lambda::Function"
    Condition: CreateGovCloudResources
    Properties:
      Code:
        S3Bucket: !Ref TemplatesS3Bucket
        S3Key: "modules/RansomwareDetection/check_ssm_used.py.zip"
      FunctionName: "LambdaCheckForSSMUse"
      Handler: "lambda_function.lambda_handler"
      MemorySize: 128
      Role: !Ref InstanceRoleARN
      Runtime: "python3.8"
      Timeout: 90
      DeadLetterConfig: !Ref "AWS::NoValue"
      TracingConfig:
        Mode: "PassThrough"
      Environment:
        Variables:
          reportbucket: !Ref SelfServiceSecS3Bucket

  xLambdaCheckForSSMUse:
    Type: AWS::CloudFormation::CustomResource
    Condition: CreateGovCloudResources
    Properties:
      ServiceToken: !GetAtt rLambdaCheckForSSMUse.Arn

  # rLambdaSSMScanner:
  #   Type: "AWS::Lambda::Function"
  #   Properties:
  #     Code:
  #       S3Bucket: !Ref TemplatesS3Bucket
  #       S3Key: "modules/RansomwareDetection/check_ssm_ec2_scan.py.zip"
  #     FunctionName: "LambdaSSMScanner"
  #     Handler: "lambda_function.lambda_handler"
  #     MemorySize: 128
  #     Role: !Ref InstanceRoleARN
  #     Runtime: "python3.8"
  #     Timeout: 90
  #     DeadLetterConfig: !Ref "AWS::NoValue"
  #     TracingConfig:
  #       Mode: "PassThrough"
  #     Environment:
  #       Variables:
  #         reportbucket: !Ref SelfServiceSecS3Bucket
  #         ssm_name: 'RansomwareEC2Scanner'
  #
  # xLambdaSSMScanner:
  #   Type: AWS::CloudFormation::CustomResource
  #   Properties:
  #     ServiceToken: !GetAtt rLambdaSSMScanner.Arn
